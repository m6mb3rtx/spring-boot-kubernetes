# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: ubuntu-latest

stages:
- stage: SAST
  displayName: SAST
  jobs:
  - job: Job
    steps:

    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'laboratorio-final-diplomado'
        organization: 'm6mb3rtx'
        projectKey: 'm6mb3rtx_spring-boot-kubernetes'
        projectName: 'spring-boot-kubernetes'

    - task: Maven@4
      displayName: 'Execute Maven goal'
      inputs:
        mavenPomFile: 'pom.xml'
        options: '-Dmaven.test.failure.ignore=true'
        mavenOptions: '-Xmx3072m'
        mavenVersionOption: 'Default'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: true
        sqMavenPluginVersionChoice: 'latest'
        codeCoverageToolOption: 'JaCoCo'
    #    codeCoverageToolOption: 'Cobertura'
        testResultsFiles: '**/TEST-*.xml'
        goals: 'verify'
    #    goals: 'clean verify sonar:sonar'
    #- task: SonarCloudAnalyze@1
    - task: SonarCloudPublish@1
      displayName: 'Publish results on build summary'
      inputs:
        pollingTimeoutSec: '300'

- stage: SCA
  displayName: SCA
  jobs:
  - job: Job
    steps:

    - task: Maven@4
      displayName: 'Execute Maven goal'
      inputs:
        mavenPomFile: 'pom.xml'
        options: '-Dmaven.test.failure.ignore=true'
        mavenOptions: '-Xmx3072m'
        mavenVersionOption: 'Default'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
        sqMavenPluginVersionChoice: 'latest'
    #   codeCoverageToolOption: 'JaCoCo'
    #    codeCoverageToolOption: 'Cobertura'
        testResultsFiles: '**/TEST-*.xml'
    #    goals: 'verify'
    #    goals: 'clean verify sonar:sonar'

    - task: dependency-check-build-task@6
      inputs:
        projectName: 'spring-boot-kubernetes'
        scanPath: '$(Build.SourcesDirectory)/target'
        format: 'XML'
        reportsDirectory: 'Reportes'        
    - script: |
       
        echo "se encuentra en $(Build.SourcesDirectory)/Reportes/dependencyCheckReport.xml"       
        existe=$(grep 'confidence="HIGH' $(Build.SourcesDirectory)/Reportes/dependency-check-report.xml | tr '<>' '\n'  | grep confidence | grep  'confidence="HIGH' | grep ^evidence | wc -l)          
        if [ $existe -gt 0 ];
        then 
          echo "Se detectan vulnerabilidades Altas"            
          #exit 1;
        else:
          echo "Bien!, no detectan vulnerabilidades"
        fi;
      



